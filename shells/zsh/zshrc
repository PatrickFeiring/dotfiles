alias g=git
alias gr='cd $(git rev-parse --show-toplevel)'
alias ll='ls -FGlAhp'
alias k='kubectl'
alias t=tmux
alias tx=tmuxinator

alias -g gp='| grep -i'

setopt autocd

alias d='dirs -v'
setopt autopushd
setopt pushdsilent
setopt pushdminus
DIRSTACKSIZE=10

# Case insensitive completion
# zstyle ':completion:*' matcher-list 'm:{[:lower:][:upper:]}={[:upper:][:lower:]}' 'm:{[:lower:][:upper:]}={[:upper:][:lower:]} l:|=* r:|=*' 'm:{[:lower:][:upper:]}={[:upper:][:lower:]} l:|=* r:|=*' 'm:{[:lower:][:upper:]}={[:upper:][:lower:]} l:|=* r:|=*'
# zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'

autoload bashcompinit && bashcompinit
autoload -Uz compinit && compinit

autoload -Uz vcs_info
zstyle ':vcs_info:*' enable git
zstyle ':vcs_info:git*' formats " (%b)"
zstyle ':vcs_info:git*' actionformats " (%b | %a)"
precmd() {
    vcs_info
}

# Prompt
# setopt prompt_subst
# export PROMPT='%n: %~${vcs_info_msg_0_}%# '
# export RPROMPT=''
autoload -U promptinit; promptinit
prompt pure

# vi mode
bindkey -v
export KEYTIMEOUT=1

# History settings
HISTSIZE=10000
SAVEHIST=10000
HISTFILE=${ZDOTDIR:-$HOME}/.zsh_history
unsetopt SHARE_HISTORY
setopt APPEND_HISTORY
unsetopt INC_APPEND_HISTORY

setopt HIST_IGNORE_DUPS
setopt HIST_REDUCE_BLANKS
setopt HIST_IGNORE_SPACE

autoload -U up-line-or-beginning-search
autoload -U down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search
bindkey '^[[A' up-line-or-beginning-search
bindkey '^[[B' down-line-or-beginning-search

function append-help() {
  LBUFFER="$LBUFFER --help"
  zle redisplay
}
zle -N append-help
bindkey '^h' append-help

function pet-select() {
  BUFFER=$(pet search --query "$LBUFFER")
  CURSOR=$#BUFFER
  zle redisplay
}
zle -N pet-select
stty -ixon
bindkey '^s' pet-select

# Manage plugins with antibody
source <(antibody init)
antibody bundle < ~/.zsh_plugins

export ZSH_AUTOSUGGEST_STRATEGY=(completion)

if [ -n "${commands[fzf-share]}" ]; then
  source "$(fzf-share)/key-bindings.zsh"
  source "$(fzf-share)/completion.zsh"
fi

if [ -n "${commands[direnv]}" ]; then
  eval "$(direnv hook zsh)"
fi

[ -f ~/.ghcup/env ] && source ~/.ghcup/env
[ -f ~/.utils.sh ] && source ~/.utils.sh

# opam configuration
[[ ! -r /Users/pfeiring/.opam/opam-init/init.zsh ]] || source /Users/pfeiring/.opam/opam-init/init.zsh  > /dev/null 2> /dev/null
